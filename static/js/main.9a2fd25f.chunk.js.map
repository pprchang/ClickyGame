{"version":3,"sources":["components/Header.js","components/ImageCard/index.js","components/Wrapper/index.js","components/BodyTitle.js","components/BodyFooter.js","App.js","index.js"],"names":["FixHeader","props","className","title","direction","score","topScore","ImageCard","onClick","clicked","id","alt","name","src","image","Wrapper","children","BodyTitle","BodyFooter","shuffle","array","i","length","j","Math","floor","random","App","state","images","clickedimage","indexOf","push","handleIncrement","shuffleImages","setState","this","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4zEAsBeA,MApBf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iCACb,wBAAIA,UAAU,+BAA+BD,EAAME,QAErD,yBAAKD,UAAU,yDACb,wBAAIA,UAAU,oBAAoBD,EAAMG,YAE1C,yBAAKF,UAAU,iCACb,wBAAIA,UAAU,oBAAd,SACSD,EAAMI,MADf,gBACmCJ,EAAMK,c,MCDpCC,MAVf,SAAmBN,GACjB,OACE,yBAAKC,UAAU,gBAAgBM,QAAS,kBAAMP,EAAMQ,QAAQR,EAAMS,MAChE,yBAAKR,UAAU,iBACb,yBAAKS,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,W,MCA1BC,MAJf,SAAiBd,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMe,W,OCkB1BC,MApBf,SAAmBhB,GACjB,OACE,6BACE,yBAAKC,UAAU,qCACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,qDACXD,EAAME,OAET,uBAAGD,UAAU,oBACX,wBAAIA,UAAU,cAAd,iFCCGgB,MAVf,WACE,OACE,6BACE,4BAAQhB,UAAU,yCAChB,sDCER,SAASiB,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,E,IA4FMO,E,4MAvFbC,MAAQ,CACNC,SACAzB,UAAW,8BACXC,MAAO,EACPC,SAAU,EACVwB,aAAc,I,EAGhBrB,QAAU,SAACC,GAET,IAAIL,EAAQ,EAAKuB,MAAMvB,MACnBC,EAAW,EAAKsB,MAAMtB,SACtBwB,EAAe,EAAKF,MAAME,cAEI,IAA9BA,EAAaC,QAAQrB,IAEvBoB,EAAaE,KAAKtB,GAGlB,EAAKuB,kBAEL,EAAKC,iBACyB,KAArB,EAAKN,MAAMvB,MAEpB,EAAK8B,SAAS,CACZ/B,UAAW,yBACXC,MAAO,EACPyB,aAAc,KAIhB,EAAKK,SAAS,CACZ/B,UAAW,qCACXC,MAAO,EACPyB,aAAc,KAKdzB,EAAQC,GACV,EAAK6B,SAAS,CACZ7B,SAAUD,K,EAMhB4B,gBAAkB,WAEhB,EAAKE,SAAS,CACZ9B,MAAO,EAAKuB,MAAMvB,MAAQ,EAC1BD,UAAW,8B,EAKf8B,cAAgB,WACd,EAAKC,SAAS,CAAEN,OAAQV,EAAQU,M,uDAGxB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACE1B,MAAM,cACNC,UAAWgC,KAAKR,MAAMxB,UACtBC,MAAO+B,KAAKR,MAAMvB,MAClBC,SAAU8B,KAAKR,MAAMtB,WAEvB,kBAAC,EAAD,CAAWH,MAAM,gBACjB,kBAAC,EAAD,KACGiC,KAAKR,MAAMC,OAAOQ,KAAI,SAACvB,GAAD,OACrB,kBAAC,EAAD,CACEJ,GAAII,EAAMJ,GACV4B,IAAKxB,EAAMJ,GACXE,KAAME,EAAMF,KACZE,MAAOA,EAAMA,MACbL,QAAS,EAAKA,cAIpB,kBAAC,EAAD,W,GAnFU8B,IAAMC,WCZxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9a2fd25f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction FixHeader(props) {\r\n  return (\r\n    <div className='bg-success p-4 sticky-top'>\r\n      <div className='row'>\r\n        <div className='col-sm text-center text-white'>\r\n          <h2 className='font-weight-bold text-white'>{props.title}</h2>\r\n        </div>\r\n        <div className='col-sm text-center text-white bg-warning rounded-pill'>\r\n          <h2 className='font-weight-bold'>{props.direction}</h2>\r\n        </div>\r\n        <div className='col-sm text-center text-white'>\r\n          <h2 className='font-weight-bold'>\r\n            Score:{props.score} | Top Score:{props.topScore}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixHeader;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className='card col-md-3' onClick={() => props.clicked(props.id)}>\r\n      <div className='img-container'>\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\n\r\nfunction BodyTitle(props) {\r\n  return (\r\n    <div>\r\n      <div className='jumbotron jumbotron-fluid bg-dark'>\r\n        <div className='container'>\r\n          <h1 className='display-1 font-weight-bold text-center text-white'>\r\n            {props.title}\r\n          </h1>\r\n          <p className='lead text-center'>\r\n            <h5 className='text-white'>\r\n              Click on an image to earn points, but don't click on any more than\r\n              once!\r\n            </h5>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BodyTitle;\r\n","import React from 'react';\r\n\r\nfunction BodyFooter() {\r\n  return (\r\n    <div>\r\n      <footer className='bg-success p-4 text-center text-white'>\r\n        <h4>Copyright &copy; 2020</h4>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BodyFooter;\r\n","import React from 'react';\nimport FixHeader from './components/Header';\nimport ImageCard from './components/ImageCard';\nimport Wrapper from './components/Wrapper';\nimport images from './images.json';\nimport BodyTitle from './components/BodyTitle';\nimport BodyFooter from './components/BodyFooter';\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends React.Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    images,\n    direction: 'Click on an image to begin!',\n    score: 0,\n    topScore: 0,\n    clickedimage: [],\n  };\n\n  clicked = (id) => {\n    // assigning states\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    let clickedimage = this.state.clickedimage;\n\n    if (clickedimage.indexOf(id) === -1) {\n      // push that id into clickedimage array\n      clickedimage.push(id);\n\n      // call handleIncrement function which increment score\n      this.handleIncrement();\n      // call shuffleImage function after each click to shuffle the images\n      this.shuffleImages();\n    } else if (this.state.score === 12) {\n      // let player know they win the game once score reached 12, reset score and reset clickedimage array\n      this.setState({\n        direction: 'You have won the game!',\n        score: 0,\n        clickedimage: [],\n      });\n    } else {\n      // let player know they lose because same image was selected twice, reset score and reset clickedimage array\n      this.setState({\n        direction: 'You selected the same image twice!',\n        score: 0,\n        clickedimage: [],\n      });\n    }\n\n    //set topScore to score if score is greater than topScore\n    if (score > topScore) {\n      this.setState({\n        topScore: score,\n      });\n    }\n  };\n\n  //function to increment score by 1 and change message\n  handleIncrement = () => {\n    // setState updates a components states\n    this.setState({\n      score: this.state.score + 1,\n      direction: 'Great job! Select again!',\n    });\n  };\n\n  // function to shuffle images\n  shuffleImages = () => {\n    this.setState({ images: shuffle(images) });\n  };\n\n  render() {\n    return (\n      <div>\n        <FixHeader\n          title='Clicky Game'\n          direction={this.state.direction}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        <BodyTitle title='Clicky Game' />\n        <Wrapper>\n          {this.state.images.map((image) => (\n            <ImageCard\n              id={image.id}\n              key={image.id}\n              name={image.name}\n              image={image.image}\n              clicked={this.clicked}\n            />\n          ))}\n        </Wrapper>\n        <BodyFooter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}